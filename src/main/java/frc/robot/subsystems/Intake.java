// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;

import edu.wpi.first.wpilibj.command.Subsystem;
import frc.robot.RobotMap;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.ControlMode;
//import edu.wpi.first.wpilibj.DigitalInput;
//import frc.robot.commands.*;
//import edu.wpi.first.wpilibj.livewindow.LiveWindow;
//import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
//import edu.wpi.first.wpilibj.PWMTalonSRX;
//import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Intake extends Subsystem {

  WPI_TalonSRX frontintake = new WPI_TalonSRX(RobotMap.FRONTINTAKE_CAN_ID);
  WPI_TalonSRX frontintakefast = new WPI_TalonSRX(RobotMap.FRONTINTAKEFAST_CAN_ID);
  WPI_TalonSRX rearintake = new WPI_TalonSRX(RobotMap.REARINTAKE_CAN_ID);

  public void initDefaultCommand()
  {
  }
  
  public void InIntake() {
      frontintakeIN();
      frontintakefastIN();
      rearintakeIN();
  }
  
  public void OutIntake() {
       frontintakeOUT();
       frontintakefastOUT();
      // rearintakeOUT();

  }
  
  public void stopIntake() 
  {
      stop_frontintake();
      stop_frontintakefast();
      stop_rearintake();
  }

    
  public void stop_frontintake() {
    frontintake.set(ControlMode.PercentOutput, 0);
  }
    
  public void stop_frontintakefast() {
        frontintakefast.set(ControlMode.PercentOutput, 0);
  }
  public void stop_rearintake() {
      rearintake.set(ControlMode.PercentOutput, 0);
}
    
  public void frontintakeIN() {
      frontintake.set(ControlMode.PercentOutput, RobotMap.MAX_SPEED_FRONTINTAKE);
  }
    
  public void frontintakeOUT() {
    frontintake.set(ControlMode.PercentOutput, -RobotMap.MAX_SPEED_FRONTINTAKE);
  }
    
  public void frontintakefastIN() {
        frontintakefast.set(ControlMode.PercentOutput, RobotMap.MAX_SPEED_FRONTINTAKEFAST);
  }
    
  public void frontintakefastOUT() {
        frontintakefast.set(ControlMode.PercentOutput, -RobotMap.MAX_SPEED_FRONTINTAKEFAST);
  }

public void rearintakeIN() {
      rearintake.set(ControlMode.PercentOutput, RobotMap.MAX_SPEED_REARINTAKE);
  }
    
  public void rearintakeOUT() {
    rearintake.set(ControlMode.PercentOutput, -RobotMap.MAX_SPEED_REARINTAKE);
  }
}


