// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;

import edu.wpi.first.wpilibj.command.Subsystem;
import frc.robot.RobotMap;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.ControlMode;
import edu.wpi.first.wpilibj.DigitalInput;
import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
//import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMTalonSRX;
import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Intake extends Subsystem {

  WPI_TalonSRX intakeone = new WPI_TalonSRX(RobotMap.INTAKE_CAN_ID);
  WPI_TalonSRX intaketwo = new WPI_TalonSRX(RobotMap.INTAKE_CAN_ID);

  public void initDefaultCommand()
  {

  }
      public void InIntake() {
      stop_intakeone();
      stop_intaketwo();
  }
      public void OutIntake() {
       stop_intakeone();
        stop_intaketwo();
  }
    
      public void stopIntake() {
      stop_intakeone();
      stop_intaketwo();
      }

    
      public void stop_intakeone() {
        intakeone.set(ControlMode.PercentOutput, 0);
      }
    
      public void stop_intaketwo() {
        intaketwo.set(ControlMode.PercentOutput, 0);
      }
    
        public void intakeoneIN() {
          intakeone.set(ControlMode.PercentOutput, RobotMap.MAX_SPEED_INTAKE);
      }
    
      public void intakeoneOUT() {
        intakeone.set(ControlMode.PercentOutput, -RobotMap.MAX_SPEED_INTAKE);
      }
    
      public void intaketwoIN() {
        intaketwo.set(ControlMode.PercentOutput, RobotMap.MAX_SPEED_INTAKETWO);
        // position += shoulder_counter.get();
        // shoulder_counter.reset();
      }
    
      public void intaketwoOUT() {
        intaketwo.set(ControlMode.PercentOutput, -RobotMap.MAX_SPEED_INTAKETWO);
        // position -= shoulder_counter.get();
        // shoulder_counter.reset();

      




